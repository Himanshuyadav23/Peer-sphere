rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Communities - authenticated users can read all, create new ones, and update if they're the creator
    match /communities/{communityId} {
      allow read: if request.auth != null;
      allow list: if request.auth != null; // Allow listing for authenticated users
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || 
         request.auth.uid in resource.data.members);
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // Events - authenticated users can read all, create new ones, and update if they're the creator
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow list: if request.auth != null; // Allow listing for authenticated users
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      allow update: if request.auth != null && request.auth.uid == resource.data.createdBy;
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // Messages - users can read and write messages in conversations they're part of
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
    }
  }
}
